defmodule Life.CLI do

  @empty_grid """
  ╔═══╦═══╦═══╦═══╦═══╦═══╦═══╦═══╦═══╦═══╗
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣
  ║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║
  ╚═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╝
  """

  @header "╔═══╦═══╦═══╦═══╦═══╦═══╦═══╦═══╦═══╦═══╗"
  @center "║   ║   ║   ║   ║   ║   ║   ║   ║   ║   ║"
  @middle "╠═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╬═══╣"
  @footer "╚═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╝"


  def main([]) do
    IO.write @empty_grid # TODO no need for an hardcoded grid here
  end
  def main(["glider"]) do
    [{3, 0}, {4, 1}, {2, 2}, {3, 2}, {4, 2}]
    |> MapSet.new()
    |> loop()
  end


  def loop(grid, interval \\ 1000) do
    print(grid)

    :timer.sleep(interval)

    grid
    |> Life.tick()
    |> loop()
  end


  def print(grid) do
    IO.puts @header
    do_print(@center, 10)
    IO.puts @footer
  end


  defp do_print(str, n) when n <= 1 do
    IO.puts str
  end
  defp do_print(str, n) do
    IO.puts str <> "\n" <> @middle
    do_print(str, n - 1)
  end

end
